// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Mission_4.Models;

namespace Mission_4.Migrations
{
    [DbContext(typeof(MovieApplicationContext))]
    [Migration("20220129225932_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.22");

            modelBuilder.Entity("Mission_4.Models.Category", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CategoryName")
                        .HasColumnType("TEXT");

                    b.HasKey("CategoryID");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("Mission_4.Models.MovieModel", b =>
                {
                    b.Property<int>("MovieID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoryID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Director")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Edited")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LentTo")
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .HasColumnType("TEXT")
                        .HasMaxLength(25);

                    b.Property<string>("Rating")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Year")
                        .HasColumnType("INTEGER");

                    b.HasKey("MovieID");

                    b.HasIndex("CategoryID");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            MovieID = 1,
                            CategoryID = 1,
                            Director = "Danny Boyle",
                            Edited = false,
                            LentTo = "Matt Goulding",
                            Notes = "Best movie ever!",
                            Rating = "R",
                            Title = "Trainspotting",
                            Year = 1996
                        },
                        new
                        {
                            MovieID = 2,
                            CategoryID = 2,
                            Director = "Kiyoshi Kurosawa",
                            Edited = false,
                            LentTo = "Matt Goulding",
                            Notes = "This one melts your brain.",
                            Rating = "R",
                            Title = "Cure",
                            Year = 1997
                        },
                        new
                        {
                            MovieID = 3,
                            CategoryID = 3,
                            Director = "Éric Rohmer",
                            Edited = false,
                            LentTo = "Matt Goulding",
                            Notes = "My favorite RomCom.",
                            Rating = "G",
                            Title = "A Summer's Tale",
                            Year = 1996
                        });
                });

            modelBuilder.Entity("Mission_4.Models.MovieModel", b =>
                {
                    b.HasOne("Mission_4.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
